{"version":3,"sources":["features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","app/hooks.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["actions","todo","type","payload","currentTodoReducer","state","arguments","length","undefined","action","query","status","initialState","filterReducer","_objectSpread","value","todosReducer","todos","rootReducer","combineReducers","currentTodo","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppDispatch","useDispatch","useAppSelector","useSelector","TodoList","_useState","useState","_useState2","_slicedToArray","todosList","setTodosList","dispatch","_useAppSelector","useEffect","filteredTodos","title","toLocaleLowerCase","includes","completed","_jsx","className","children","_jsxs","map","id","onClick","currentTodoActions","handleClickSelect","TodoFilter","handleChangeQuery","FilterActions","onSubmit","event","preventDefault","onChange","e","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","isLoadUser","setIsLoadUser","_useState3","_useState4","user","setUser","loadUser","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","userFromServer","wrap","_context","prev","next","abrupt","userId","concat","sent","finish","stop","apply","href","email","name","App","isLoadTodos","setIsLoadTodos","loadTodos","todosFromServer","todosActions","_Fragment","Root","Provider","Router","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8d07431b.chunk.js","sourcesContent":["import { Todo } from '../types/Todo';\n\n// we use string literal as a type to avoid mistype in future\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\n// payload is a typical name for an action data\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\n// Action creator return type protect us from a mistype\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\n// These actions will be used in the application\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/SET':\n      return action.payload;\n\n    case 'currentTodo/REMOVE':\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","import { Status } from '../types/Status';\n\ntype SetQueryAction = { type: 'filter/SET_QUERY', payload: string };\ntype SetStatusAction = { type: 'filter/SET_STATUS', payload: Status };\n\ntype Action = SetQueryAction | SetStatusAction;\n\nconst setQuery = (query: string): SetQueryAction => ({\n  type: 'filter/SET_QUERY',\n  payload: query,\n});\n\nconst setStatus = (status: Status): SetStatusAction => ({\n  type: 'filter/SET_STATUS',\n  payload: status,\n});\n\nexport const actions = { setQuery, setStatus };\n\ntype State = {\n  query: string;\n  status: Status;\n};\n\nconst initialState: State = {\n  query: '',\n  status: 'all',\n};\n\nconst filterReducer = (\n  state: State = initialState,\n  action: Action,\n) => {\n  switch (action.type) {\n    case 'filter/SET_QUERY':\n      return {\n        ...state,\n        query: action.payload,\n      };\n\n    case 'filter/SET_STATUS':\n      return {\n        ...state,\n        status: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\ntype SetTodos = { type: 'todos/SET', payload: Todo[] };\n\ntype Actions = SetTodos;\n\nconst set = (value: Todo[]): SetTodos => (\n  { type: 'todos/SET', payload: value });\n\nexport const actions = { set };\n\nconst todosReducer = (todos: Todo[] = [], action: Actions): Todo[] => {\n  switch (action.type) {\n    case 'todos/SET':\n      return action.payload;\n\n    default:\n      return todos;\n  }\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions as currentTodoActions } from '../../features/currentTodo';\nimport { Todo } from '../../types/Todo';\n\nexport const TodoList: React.FC = () => {\n  const [todosList, setTodosList] = useState<Todo[]>([]);\n  const todos = useAppSelector(state => state.todos);\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const dispatch = useAppDispatch();\n  const { query, status } = useAppSelector(state => state.filter);\n\n  const handleClickSelect = (todo: Todo) => dispatch(currentTodoActions.setTodo(todo));\n\n  useEffect(() => {\n    const filteredTodos = todos\n      .filter(todo => todo.title.toLocaleLowerCase().includes(query.toLocaleLowerCase()))\n      .filter(todo => {\n        switch (status) {\n          case 'completed':\n            return todo.completed;\n\n          case 'active':\n            return !todo.completed;\n\n          default:\n            return true;\n        }\n      });\n\n    setTodosList(filteredTodos);\n  }, [status, todos, query]);\n\n  return (\n    todosList.length === 0\n      ? (\n        <p className=\"notification is-warning\">\n          There are no todos matching current filter criteria\n        </p>\n      )\n      : (\n        <table className=\"table is-narrow is-fullwidth\">\n          <thead>\n            <tr>\n              <th>#</th>\n\n              <th>\n                <span className=\"icon\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </th>\n\n              <th>Title</th>\n              <th> </th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {todosList.map(todo => (\n              <tr\n                data-cy=\"todo\"\n                key={todo.id}\n                className={todo === currentTodo\n                  ? 'has-background-info-light'\n                  : ''}\n              >\n                <td className=\"is-vcentered\">{todo.id}</td>\n                <td className=\"is-vcentered\">\n                  {todo.completed && (\n                    <span className=\"icon\" data-cy=\"iconCompleted\">\n                      <i className=\"fas fa-check\" />\n                    </span>\n                  )}\n                </td>\n                <td className=\"is-vcentered is-expanded\">\n                  <p className={todo.completed\n                    ? 'has-text-success'\n                    : 'has-text-danger'}\n                  >\n                    {todo.title}\n                  </p>\n                </td>\n                <td className=\"has-text-right is-vcentered\">\n                  <button\n                    data-cy=\"selectButton\"\n                    className=\"button\"\n                    type=\"button\"\n                    onClick={() => handleClickSelect(todo)}\n                  >\n                    <span className=\"icon\">\n                      <i\n                        className={todo === currentTodo\n                          ? 'far fa-eye-slash'\n                          : 'far fa-eye'}\n                      />\n                    </span>\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )\n  );\n};\n","import React from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { Status } from '../../types/Status';\nimport { actions as FilterActions } from '../../features/filter';\n\nexport const TodoFilter: React.FC = () => {\n  const { query, status } = useAppSelector(state => state.filter);\n  const dispatch = useAppDispatch();\n\n  const handleChangeQuery = (value: string) => (\n    dispatch(FilterActions.setQuery(value)));\n\n  const handleChangeStatus = (value: Status) => (\n    dispatch(FilterActions.setStatus(value)));\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={status}\n            onChange={e => handleChangeStatus(e.target.value as Status)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={e => handleChangeQuery(e.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            <button\n              aria-label=\"deleteQuery\"\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => handleChangeQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { actions as currentTodoActions } from '../../features/currentTodo';\n\nexport const TodoModal: React.FC = () => {\n  const [isLoadUser, setIsLoadUser] = useState(false);\n  const [user, setUser] = useState<User | null>(null);\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const dispatch = useAppDispatch();\n\n  const handleClickClose = () => dispatch(currentTodoActions.removeTodo());\n\n  const loadUser = async () => {\n    if (!currentTodo) {\n      return;\n    }\n\n    try {\n      setIsLoadUser(true);\n      const userFromServer = await getUser(currentTodo.userId);\n\n      setUser(userFromServer);\n    } finally {\n      setIsLoadUser(false);\n    }\n  };\n\n  useEffect(() => {\n    loadUser();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoadUser && <Loader />}\n\n      {!isLoadUser && user && (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${currentTodo?.id}`}\n            </div>\n\n            <button\n              aria-label=\"closeModal\"\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleClickClose}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">fugiat veniam minus</p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {currentTodo?.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { useAppDispatch, useAppSelector } from './app/hooks';\nimport { getTodos } from './api';\nimport { actions as todosActions } from './features/todos';\n\nexport const App: React.FC = () => {\n  const [isLoadTodos, setIsLoadTodos] = useState(false);\n  const dispatch = useAppDispatch();\n  const currentTodo = useAppSelector(state => state.currentTodo);\n\n  const loadTodos = async () => {\n    try {\n      setIsLoadTodos(true);\n      const todosFromServer = await getTodos();\n\n      dispatch(todosActions.set(todosFromServer));\n    } finally {\n      setIsLoadTodos(false);\n    }\n  };\n\n  useEffect(() => {\n    loadTodos();\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {isLoadTodos\n                ? <Loader />\n                : <TodoList />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {currentTodo && (<TodoModal />)}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}